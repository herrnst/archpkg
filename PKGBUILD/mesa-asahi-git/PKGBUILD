# Maintainer: Laurent Carlier <lordheavym@gmail.com>
# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: Jan de Groot <jgc@archlinux.org>
# Contributor: Andreas Radke <andyrtr@archlinux.org>
# Contributor: Dan Johansen <strit@manjaro.org>

highmem=1

_suffix=-asahi-git
_version=24.3.0
_commitdate=20240926
_commitid=04a65924530910d2ca64531dd399f07257624161

pkgbase=mesa$_suffix
pkgname=(
	"vulkan-swrast$_suffix"
	"vulkan-asahi$_suffix"
	"mesa$_suffix"
)
pkgdesc="An open-source implementation of the OpenGL specification"
pkgver=${_version}+git${_commitdate}.${_commitid:0:7}
pkgrel=1

arch=('aarch64')
makedepends=('python-mako' 'libxml2' 'libx11' 'xorgproto' 'libdrm' 'libxshmfence' 'libxxf86vm'
             'libxdamage' 'libvdpau' 'libva' 'wayland' 'wayland-protocols' 'zstd' 'elfutils' 'llvm'
             'libomxil-bellagio' 'libclc' 'clang' 'libglvnd' 'libunwind' 'lm_sensors' 'libxrandr'
             'systemd' 'valgrind' 'glslang' 'vulkan-icd-loader' 'directx-headers' 'cmake' 'meson'
             'spirv-tools' 'spirv-llvm-translator' 'python-mako' 'python-yaml' 'python-packaging')
url="https://www.mesa3d.org/"
license=('custom')
options=('debug' '!lto')
source=(
	https://gitlab.freedesktop.org/asahi/mesa/-/archive/$_commitid/mesa-$_commitid.tar.gz
	LICENSE
	pr283-virtio.patch
	ilikerottenapples.patch
)
sha512sums=(
	'0055e564605994377f32ed661c4e41af58f0d257c8f4728b920e766075a142ac75eddfad4c00782504d4152419c620af89bec8d7596e57569939af9ecc973422'
	'f9f0d0ccf166fe6cb684478b6f1e1ab1f2850431c06aa041738563eb1808a004e52cdec823c103c9e180f03ffc083e95974d291353f0220fe52ae6d4897fecc7'
	'c6c1db1ae173e90ebb96c431ccee6478221801f0ce79b8b53b8d750a410a94b423b523ab337b3765295f3b8a8d8ef51178d46d0d80e27970175979f6ced24483'
	'74b6ff6428802d8d7a403fecd38138b9ff7c800696ea8932162547d13a241a0400add3238f00c58e74973eda68701e09b19adb3edafa83ba7a27be2337a8df1a'
)

prepare() {
  cd mesa-$_commitid
  patch -p1 -i "$srcdir/pr283-virtio.patch"
  patch -p1 -i "$srcdir/ilikerottenapples.patch"
}

build() {
  # Build only minimal debug info to reduce size
  CFLAGS+=' -g1'
  CXXFLAGS+=' -g1'

  arch-meson mesa-$_commitid build \
    -D b_ndebug=true \
    -D b_lto=false \
    -D platforms=x11,wayland \
    -D gallium-drivers=softpipe,llvmpipe,virgl,asahi \
    -D vulkan-drivers=swrast,asahi \
    -D vulkan-layers= \
    -D video-codecs=all \
    -D egl=enabled \
    -D gallium-extra-hud=true \
    -D gallium-opencl=disabled \
    -D gallium-rusticl=false \
    -D gallium-va=disabled \
    -D gallium-vdpau=disabled \
    -D gallium-xa=disabled \
    -D gbm=enabled \
    -D gles1=disabled \
    -D gles2=enabled \
    -D glvnd=enabled \
    -D glx=dri \
    -D legacy-x11=dri2 \
    -D intel-rt=disabled \
    -D libunwind=disabled \
    -D llvm=enabled \
    -D lmsensors=enabled \
    -D osmesa=true \
    -D shared-glapi=enabled \
    -D microsoft-clc=disabled \
    -D valgrind=enabled \
    -D android-libbacktrace=disabled

  # Print config
  meson configure build

  ninja -C build
  meson compile -C build

  # fake installation to be seperated into packages
  # outside of fakeroot but mesa doesn't need to chown/mod
  DESTDIR="${srcdir}/fakeinstall" meson install -C build
}

_install() {
  local src f dir
  for src; do
    f="${src#fakeinstall/}"
    dir="${pkgdir}/${f%/*}"
    install -m755 -d "${dir}"
    mv -v "${src}" "${dir}/"
  done
}

_package_vulkan-swrast() {
  pkgdesc="Vulkan software rasteriser driver"
  depends=('wayland' 'libx11' 'libxshmfence' 'libdrm' 'zstd' 'llvm-libs' 'systemd-libs' 'libunwind')
  optdepends=('vulkan-mesa-layers: additional vulkan layers')
  conflicts=('vulkan-mesa' 'vulkan-swrast' 'vulkan-swrast-asahi-edge')
  replaces=('vulkan-mesa' 'vulkan-swrast-asahi-edge')
  provides=('vulkan-driver' 'vulkan-swrast')

  _install fakeinstall/usr/share/vulkan/icd.d/lvp_icd*.json
  _install fakeinstall/usr/lib/libvulkan_lvp.so

  install -m644 -Dt "${pkgdir}/usr/share/licenses/${pkgname}" LICENSE
}

_package_vulkan-asahi() {
  pkgdesc="Vulkan Asahi driver"
  depends=('wayland' 'libx11' 'libxshmfence' 'libdrm' 'zstd' 'llvm-libs' 'systemd-libs' 'libunwind')
  optdepends=('vulkan-mesa-layers: additional vulkan layers')
  conflicts=('vulkan-mesa' 'vulkan-asahi')
  replaces=('vulkan-mesa')
  provides=('vulkan-driver' 'vulkan-asahi')

  _install fakeinstall/usr/share/vulkan/icd.d/asahi_icd*.json
  _install fakeinstall/usr/lib/libvulkan_asahi.so

  install -m644 -Dt "${pkgdir}/usr/share/licenses/${pkgname}" LICENSE
}

_package_mesa() {
  depends=('libdrm' 'wayland' 'libxxf86vm' 'libxdamage' 'libxshmfence' 'libelf'
           'libomxil-bellagio' 'libunwind' 'llvm-libs' 'lm_sensors' 'libglvnd'
           'zstd' 'vulkan-icd-loader')
  depends+=('libsensors.so' 'libexpat.so' 'libvulkan.so')
  optdepends=('opengl-man-pages: for the OpenGL API man pages')
  provides=('mesa-libgl' 'opengl-driver' 'mesa')
  conflicts=('mesa-libgl' 'mesa' 'mesa-asahi-edge')
  replaces=('mesa-libgl' 'mesa-asahi-edge')

  _install fakeinstall/usr/share/drirc.d/00-mesa-defaults.conf
  _install fakeinstall/usr/share/glvnd/egl_vendor.d/50_mesa.json

  # ati-dri, nouveau-dri, intel-dri, svga-dri, swrast, swr
  _install fakeinstall/usr/lib/dri/*_dri.so

  _install fakeinstall/usr/lib/lib{gbm,glapi}.so*
  _install fakeinstall/usr/lib/libOSMesa.so*

  _install fakeinstall/usr/include
  rm -f fakeinstall/usr/lib/pkgconfig/{egl,gl}.pc
  _install fakeinstall/usr/lib/pkgconfig

  # libglvnd support
  _install fakeinstall/usr/lib/libGLX_mesa.so*
  _install fakeinstall/usr/lib/libEGL_mesa.so*

  # indirect rendering
  ln -s /usr/lib/libGLX_mesa.so.0 "${pkgdir}/usr/lib/libGLX_indirect.so.0"

  # libgallium
  _install fakeinstall/usr/lib/libgallium-*.so

  # make sure there are no files left to install
  find fakeinstall -depth -print0 | xargs -0 rmdir

  install -m644 -Dt "${pkgdir}/usr/share/licenses/${pkgname}" LICENSE
}

for _p in "${pkgname[@]}"; do
  eval "package_$_p() {
    $(declare -f "_package_${_p%$_suffix}")
    _package_${_p%$_suffix}
  }"
done
