From ade0db4349f4df464efec5051c1009504a56092c Mon Sep 17 00:00:00 2001
From: CastagnaIT <gottardo.stefano.83@gmail.com>
Date: Fri, 13 Oct 2023 16:43:18 +0200
Subject: [PATCH] [Properties] Add license_url/license_url_append properties

---
 inputstream.adaptive/addon.xml.in |  2 +-
 src/CompKodiProps.cpp             | 32 +++++++++++++++++++++++++++++++
 2 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/inputstream.adaptive/addon.xml.in b/inputstream.adaptive/addon.xml.in
index 5b64e8311..da92421e3 100644
--- a/inputstream.adaptive/addon.xml.in
+++ b/inputstream.adaptive/addon.xml.in
@@ -10,7 +10,7 @@
     name="adaptive"
     extension=""
     tags="true"
-    listitemprops="license_type|license_key|license_data|license_flags|manifest_type|server_certificate|manifest_update_parameter|manifest_upd_params|manifest_params|manifest_headers|stream_params|stream_headers|original_audio_language|play_timeshift_buffer|pre_init_data|stream_selection_type|chooser_bandwidth_max|chooser_resolution_max|chooser_resolution_secure_max|live_delay"
+    listitemprops="license_type|license_key|license_url|license_url_append|license_data|license_flags|manifest_type|server_certificate|manifest_update_parameter|manifest_upd_params|manifest_params|manifest_headers|stream_params|stream_headers|original_audio_language|play_timeshift_buffer|pre_init_data|stream_selection_type|chooser_bandwidth_max|chooser_resolution_max|chooser_resolution_secure_max|live_delay"
     library_@PLATFORM@="@LIBRARY_FILENAME@"/>
   <extension point="xbmc.addon.metadata">
     <platform>@PLATFORM@</platform>
diff --git a/src/CompKodiProps.cpp b/src/CompKodiProps.cpp
index 06ab4c4db..9ad91c9b9 100644
--- a/src/CompKodiProps.cpp
+++ b/src/CompKodiProps.cpp
@@ -21,6 +21,15 @@ namespace
 // clang-format off
 constexpr std::string_view PROP_LICENSE_TYPE = "inputstream.adaptive.license_type";
 constexpr std::string_view PROP_LICENSE_KEY = "inputstream.adaptive.license_key";
+// PROP_LICENSE_URL and PROP_LICENSE_URL_APPEND has been added as workaround for Kodi PVR API bug
+// where limit property values to max 1024 chars, if exceeds the string is truncated.
+// Since some services provide license urls that exceeds 1024 chars,
+// PROP_LICENSE_KEY dont have enough space also because include other parameters
+// so we provide two properties allow set an url split into two 1024-character parts
+// see: https://github.com/xbmc/xbmc/issues/23903#issuecomment-1755264854
+// this problem should be fixed on Kodi 22
+constexpr std::string_view PROP_LICENSE_URL = "inputstream.adaptive.license_url";
+constexpr std::string_view PROP_LICENSE_URL_APPEND = "inputstream.adaptive.license_url_append";
 constexpr std::string_view PROP_LICENSE_DATA = "inputstream.adaptive.license_data";
 constexpr std::string_view PROP_LICENSE_FLAGS = "inputstream.adaptive.license_flags";
 constexpr std::string_view PROP_SERVER_CERT = "inputstream.adaptive.server_certificate";
@@ -49,6 +58,8 @@ constexpr std::string_view PROP_CHOOSER_RES_SECURE_MAX = "inputstream.adaptive.c
 
 ADP::KODI_PROPS::CCompKodiProps::CCompKodiProps(const std::map<std::string, std::string>& props)
 {
+  std::string licenseUrl;
+
   for (const auto& prop : props)
   {
     bool logPropValRedacted{false};
@@ -62,6 +73,17 @@ ADP::KODI_PROPS::CCompKodiProps::CCompKodiProps(const std::map<std::string, std:
       m_licenseKey = prop.second;
       logPropValRedacted = true;
     }
+    else if (prop.first == PROP_LICENSE_URL)
+    {
+      // If PROP_LICENSE_URL_APPEND is parsed before this one, we need to append it
+      licenseUrl = prop.second + licenseUrl;
+      logPropValRedacted = true;
+    }
+    else if (prop.first == PROP_LICENSE_URL_APPEND)
+    {
+      licenseUrl += prop.second;
+      logPropValRedacted = true;
+    }
     else if (prop.first == PROP_LICENSE_DATA)
     {
       m_licenseData = prop.second;
@@ -189,4 +211,14 @@ ADP::KODI_PROPS::CCompKodiProps::CCompKodiProps(const std::map<std::string, std:
     LOG::Log(LOGDEBUG, "Property found \"%s\" value: %s", prop.first.c_str(),
              logPropValRedacted ? "[redacted]" : prop.second.c_str());
   }
+
+  if (!licenseUrl.empty())
+  {
+    // PROP_LICENSE_URL replace the license url contained into PROP_LICENSE_KEY
+    const size_t pipePos = m_licenseKey.find('|');
+    if (pipePos == std::string::npos)
+      m_licenseKey = licenseUrl;
+    else
+      m_licenseKey.replace(0, pipePos, licenseUrl);
+  }
 }
